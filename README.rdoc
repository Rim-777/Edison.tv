Медиа ресурс.

Пользователь может зарегистрироваться и войти. С момента аутентификации пользователь может:
- видеть  ленту, с сылками на альбомы пользователей, которые поделились
- перейти на свою страницу добавить аватар
- создавать альбомы (ассинхронный запрос)
- добавлять фото в альбомы (ассинхронный запрос)
- поделиться ссылкой на альбом (Pub - Sub)
- удалять фото (ассинхронный запрос)
- удалиять альбомы (ассинхронный запрос)
- перейти на страницу альбома (содержит такие-же функции добавление - удаления картинок/фото)
- просматривать фото (листинг)

Что сделано:
Созданы модели:
- Пользователь
- Альбом
- Картинка
- Новость

Созданы соответствующие контроллеры:
- UsersController
- AlbubumsController
- PicturesController
- NewsController
- RegistrationController (в целях переопределения Devise-контроллера)

Созданы аплоудеры для аватара и картинок соответственно
Выполнена аутентификация
Выполнена авторизация
Выполнена  верстка  в том числе с применением Tweeter Bootstrap
Для загрузки файлов подключен плагин  "Jquery File Upload"
Для кропинга аватара подключен плагин "JCrop"
Для листнга картинок подключен плагин Magnific Popup
Написано 90 тестов (unit+acceptance)

В ЦЕЛЯХ ЭКОНОМИ ВРЕМЕНИ:
AJAX -запросы выполняются в виде исполняемого JS (только потому, что проект тестовый). В реальном проекте
с сервера я возвращаю JSON.
Не делал подтверждения регистрации через email
Не делал кеширования (также только потому, что проект тестовый.)В реальном проекте кеширование имеет место.
Не делал стрниц для редактирования профиля пользователя.
Не делал админку.
Не делал поиск.
Не делал вывод всех имеющихся пользователей.
Не писал фоновых задач

Gроект развернут на https://frozen-caverns-35223.herokuapp.com
(поскольку хостинг бесплатный, проект работает очень медленно, чтобы  проверить как работает,
 наберитесь пожалуйста терпения :))))


